from PIL import Image
import numpy as np

def encrypt_image(image_path, output_path, key):
    """
    Encrypts an image by applying a simple mathematical operation to each pixel.

    Parameters:
    image_path (str): Path to the input image.
    output_path (str): Path to save the encrypted image.
    key (int): Encryption key (used as a shift value).
    """
    image = Image.open(image_path)
    image_array = np.array(image)
    
    # Encrypting the image by adding the key to each pixel value
    encrypted_array = (image_array + key) % 256
    
    encrypted_image = Image.fromarray(encrypted_array.astype('uint8'))
    encrypted_image.save(output_path)
    print(f"Encrypted image saved as {output_path}")

def decrypt_image(image_path, output_path, key):
    """
    Decrypts an image by reversing the encryption operation.

    Parameters:
    image_path (str): Path to the encrypted image.
    output_path (str): Path to save the decrypted image.
    key (int): Encryption key (used as a shift value).
    """
    image = Image.open(image_path)
    image_array = np.array(image)
    
    # Decrypting the image by subtracting the key from each pixel value
    decrypted_array = (image_array - key) % 256
    
    decrypted_image = Image.fromarray(decrypted_array.astype('uint8'))
    decrypted_image.save(output_path)
    print(f"Decrypted image saved as {output_path}")

def main():
    while True:
        choice = input("Do you want to (e)ncrypt, (d)ecrypt, or (q)uit? ").lower()
        if choice == 'q':
            break
        elif choice in ['e', 'd']:
            image_path = input("Enter the path to the image: ")
            output_path = input("Enter the path to save the output image: ")
            try:
                key = int(input("Enter the encryption key (integer value): "))
            except ValueError:
                print("Encryption key must be an integer.")
                continue
            if choice == 'e':
                encrypt_image(image_path, output_path, key)
            elif choice == 'd':
                decrypt_image(image_path, output_path, key)
        else:
            print("Invalid choice. Please enter 'e' to encrypt, 'd' to decrypt, or 'q' to quit.")

if __name__ == "__main__":
    main()
